"""Emotes test"""

import dcfurs
import random

class emotes:
  interval = 1000
  ticks_per_sec = int(1000 / interval)
  frame = 0
  frames = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

  # anger
  frames[0] = [[1,1],[1,16],[2,2],[2,15],[3,3],[3,14],[4,4],[4,13]]
  # X.X
  frames[1] = [[1,1],[1,5],[1,12],[1,16],[2,2],[2,4],[2,13],[2,15],[3,3],[3,14],[4,2],[4,4],[4,13],[4,15],[5,1],[5,5],[5,12],[5,16]]
  # -.-
  frames[2] = [[3,2],[3,3],[3,4],[3,13],[3,14],[3,15]]
  # "."
  frames[3] = [[2,2],[2,4],[2,13],[2,15],[3,2],[3,4],[3,13],[3,15]]
  # c.c
  frames[4] = [[2,2],[2,3],[2,4],[2,5],[2,12],[2,13],[2,14],[2,15],[3,5],[3,12],[4,5],[4,12]]
  # ?.?
  frames[5] = [[0,2],[0,3],[0,4],[0,13],[0,14],[0,15],[1,1],[1,5],[1,12],[1,16],[2,1],[2,5],[2,12],[2,16],[3,3],[3,4],[3,14],[3,15],[4,3],[4,14],[6,3],[6,14]]
  # #.#
  frames[6] = [[1,2],[1,4],[1,13],[1,15],[2,1],[2,2],[2,3],[2,4],[2,5],[2,12],[2,13],[2,14],[2,15],[2,16],[3,2],[3,4],[3,13],[3,15],[4,1],[4,2],[4,3],[4,4],[4,5],[4,12],[4,13],[4,14],[4,15],[4,16],[5,2],[5,4],[5,13],[5,15]]
  # \\.\\
  frames[7] = [[2,1],[2,3],[2,13],[2,15],[3,1],[3,3],[3,13],[3,15],[4,2],[4,4],[4,14],[4,16],[5,2],[5,4],[5,14],[5,16]]
  # @.@
  frames[8] = [[0,2],[0,3],[0,4],[0,13],[0,14],[0,15],[1,1],[1,5],[1,12],[1,16],[2,0],[2,3],[2,4],[2,6],[2,11],[2,14],[2,15],[2,17],[3,0],[3,2],[3,4],[3,6],[3,11],[3,13],[3,15],[3,17],[4,0],[4,2],[4,3],[4,4],[4,6],[4,11],[4,13],[4,14],[4,15],[4,17],[5,1],[5,4],[5,5],[5,12],[5,15],[5,16],[6,2],[6,13]]
  # !.!
  frames[9] = [[1,2],[1,14],[2,2],[2,14],[3,2],[3,14],[4,2],[4,14],[6,2],[6,14]]
  # ~.^
  frames[10] = [[1,14],[2,2],[2,4],[2,13],[2,15],[3,1],[3,3],[3,12],[3,16]]
  # o.o
  frames[11] = [[2,3],[2,14],[3,2],[3,4],[3,13],[3,15],[4,2],[4,4],[4,13],[4,15],[5,3],[5,14]]
  # O.o
  frames[12] = [[1,3],[1,4],[2,2],[2,5],[2,14],[3,2],[3,5],[3,13],[3,15],[4,2],[4,5],[4,13],[4,15],[5,3],[5,4],[5,14]]
  # O.O
  frames[13] = [[1,3],[1,4],[1,13],[1,14],[2,2],[2,5],[2,12],[2,15],[3,2],[3,5],[3,12],[3,15],[4,2],[4,5],[4,12],[4,15],[5,3],[5,4],[5,13],[5,14]]
  # ` . `
  frames[14] = [[1,1],[1,16],[2,2],[2,15]]
  # u.u
  frames[15] = [[3,1],[3,5],[3,12],[3,16],[4,1],[4,2],[4,3],[4,4],[4,5],[4,12],[4,13],[4,14],[4,15],[4,16]]
  # >.<
  frames[16] = [[1,3],[1,14],[2,4],[2,13],[3,5],[3,12],[4,4],[4,13],[5,3],[5,14]]
  # =.=
  frames[17] = [[2,2],[2,3],[2,4],[2,5],[2,12],[2,13],[2,14],[2,15],[4,2],[4,3],[4,4],[4,5],[4,12],[4,13],[4,14],[4,15]]
  # 9.9
  frames[18] = [[0,3],[0,4],[0,13],[0,14],[1,2],[1,5],[1,12],[1,15],[2,2],[2,5],[2,12],[2,15],[3,3],[3,4],[3,5],[3,13],[3,14],[3,15],[4,5],[4,15],[5,2],[5,5],[5,12],[5,15],[6,3],[6,4],[6,13],[6,14]]

  def __init__(self):
    self.reset_fbuf()
    self.next_blink = random.randint(self.ticks_per_sec * 10, self.ticks_per_sec * 20)

  def reset_fbuf(self):
    self.fbuf = [bytearray(18),bytearray(18),bytearray(18),bytearray(18),bytearray(18),bytearray(18),bytearray(18)]

  def face(self):
    faceBuf = self.frames[self.frame]
    self.frame += 1
    if self.frame > 18:
      self.frame = 0
    self.reset_fbuf()
    for xy in range(0,len(faceBuf)):
      self.onPixel(faceBuf[xy][0],faceBuf[xy][1])

  def onPixel(self,y,x):
    self.fbuf[y][x] = 255

  def redrawDisplay(self):
    for y in range(0,len(self.fbuf)):
      row = self.fbuf[y]
      for x in range(0, len(row)):
        dcfurs.set_pixel(x, y, row[x])

  def draw(self):
    self.face()
    self.redrawDisplay()